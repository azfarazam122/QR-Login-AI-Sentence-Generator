version: "3.8"

services:
    app:
        build:
            context: .
            dockerfile: docker/php/Dockerfile
        container_name: my_laravel_app
        restart: unless-stopped
        volumes:
            - ./:/var/www/html
        depends_on:
            db:
                condition: service_healthy
        networks:
            - laravel_network

    nginx:
        image: nginx:alpine
        container_name: my_laravel_nginx
        restart: unless-stopped
        ports:
            - "8000:80"
        volumes:
            - ./:/var/www/html
            - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
        depends_on:
            - app
        networks:
            - laravel_network

    db:
        image: mysql:8.0
        container_name: my_laravel_db
        restart: unless-stopped
        ports:
            - "33060:3306" # For accessing DB from host machine GUI
        environment:
            MYSQL_DATABASE: ${DB_DATABASE} # Reads 'qr_login_db' from your host .env
            MYSQL_USER: ${DB_USERNAME} # Reads 'laravel_user' from your host .env
            MYSQL_PASSWORD: ${DB_PASSWORD} # Reads 'secret' from your host .env
            MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD} # Reads root password from your host .env
        volumes:
            - db_data:/var/lib/mysql
        networks:
            - laravel_network
        healthcheck:
            test:
                [
                    "CMD",
                    "mysqladmin",
                    "ping",
                    "-h",
                    "localhost",
                    "-u$${DB_USERNAME}",
                    "-p$${DB_PASSWORD}",
                ]
            interval: 10s # How often to run the check
            timeout: 5s # How long to wait for a response
            retries: 5 # How many times to retry on failure
            start_period: 30s # Grace period for the container to start up before health checks begin

networks:
    laravel_network:
        driver: bridge

volumes:
    db_data:
        driver: local
